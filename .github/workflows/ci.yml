name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: lang-dev-1

    steps:
      # 1. Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Cache Docker layers for faster builds
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # 4. Build the Docker image
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: false  # We'll push later conditionally for main branch
          tags: my-fastapi-app:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      # 5. (Optional) Run tests inside the Docker container
      - name: Run tests in container
        run: |
          docker run --rm my-fastapi-app:latest pytest

      # 6. Conditionally push the Docker image only for main branch
      - name: Push Docker image to registry
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: your-dockerhub-username/my-fastapi-app:latest
        env:
          DOCKER_BUILDKIT: 1

      # 7. (Optional) Log in to Docker Hub before pushing if you haven't already
      #- name: Log in to Docker Hub
      #  if: github.ref == 'refs/heads/main'
      #  uses: docker/login-action@v2
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USERNAME }}
      #    password: ${{ secrets.DOCKERHUB_TOKEN }}
